version: '3.8'

services:
  customer_service:
    container_name: customer
    build: ./customer_service
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DATABASE=customer
      - POSTGRES_PASSWORD=Javohir_1
      - POSTGRES_HOST=database-1.cxohj5uqpurt.ap-northeast-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - ENVIRONMENT=develop
      - LOG_LEVEL=debug
      - CUSTOMER_SERVICE_HOST=customer
      - CUSTOMER_SERVICE_PORT=6000
      - POST_SERVICE_HOST=post
      - POST_SERVICE_PORT=4004
      - REVIEW_SERVICE_HOST=review
      - REVIEW_SERVICE_PORT=2000
    ports:
      - "6000:6000"

  post_service:
    container_name: post
    build: ./post_service
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DATABASE=post
      - POSTGRES_PASSWORD=Javohir_1
      - POSTGRES_HOST=database-1.cxohj5uqpurt.ap-northeast-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - ENVIRONMENT=develop
      - LOG_LEVEL=debug
      - CUSTOMER_SERVICE_HOST=customer
      - CUSTOMER_SERVICE_PORT=6000
      - POST_SERVICE_HOST=post
      - POST_SERVICE_PORT=4004
      - REVIEW_SERVICE_HOST=review
      - REVIEW_SERVICE_PORT=2000
    ports:
      - "4004:4004"

  review_service:
    container_name: review
    build: ./review_service
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DATABASE=review
      - POSTGRES_PASSWORD=Javohir_1
      - POSTGRES_HOST=database-1.cxohj5uqpurt.ap-northeast-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - ENVIRONMENT=develop
      - LOG_LEVEL=debug
      - CUSTOMER_SERVICE_HOST=customer
      - CUSTOMER_SERVICE_PORT=6000
      - POST_SERVICE_HOST=post
      - POST_SERVICE_PORT=4004
      - REVIEW_SERVICE_HOST=review
      - REVIEW_SERVICE_PORT=2000
    ports:
      - "2000:2000"
 
  api:
    build: ./api_gateway
    depends_on:
      - "customer_service"
      - "post_service"
      - "review_service"
      - "redisdb"

  redisdb:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"